version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 10

    commands:
      - apt-get update
      - apt-get install -y python2.7 python3.7 docker
      - apt-get install -y libgtk-3-dev libxss1 xvfb libnss3-dev libasound2 libasound2-plugins
      - pip3 install --user aws-sam-cli
      - pip3 install --upgrade awscli
      # install .net core 2.1
      - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      - dpkg -i packages-microsoft-prod.deb
      - add-apt-repository universe
      - apt-get install -y apt-transport-https
      - apt-get update
      - apt-get install -y dotnet-sdk-2.1
  
  pre_build:
    commands:
      # make sure that SAM is in the path, is not automatically done on codebuild
      - USER_BASE_PATH=$(python -m site --user-base) && export PATH=$PATH:$USER_BASE_PATH/bin
      # start docker
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      # move the vs code required files into this folder
      - cp -r ${CODEBUILD_SRC_DIR_s3source}/* .

  build:
    commands:
      - npm install --unsafe-perm
      # test node
      - env SAM_PROJECT_SDK='nodejs10.x' SAM_PROJECT_PATH='testProject/hello-world/app.js' xvfb-run npm run integrationTest
      - VSCODE=$(ls -1 ./.vscode-test/vscode*/VSCode*/bin/code)
      # Install c# plugin (required for dotnetcore testing) that we pulled from s3, then test c#
      - $VSCODE --install-extension csharp.vsix --user-data-dir /tmp/
      - env SAM_PROJECT_SDK='dotnetcore2.1' SAM_PROJECT_PATH='testProject/src/HelloWorld/Function.cs' xvfb-run npm run integrationTest
      # install the python plugin (required for python testing) that we pulled from S3, then test python
      - $VSCODE --install-extension ms-python-release.vsix --user-data-dir /tmp/
      - env SAM_PROJECT_SDK='python2.7' SAM_PROJECT_PATH='testProject/hello_world/app.py' xvfb-run npm run integrationTest
      - env SAM_PROJECT_SDK='python3.7' SAM_PROJECT_PATH='testProject/hello_world/app.py' xvfb-run npm run integrationTest
      - env SAM_PROJECT_SDK='python3.6' SAM_PROJECT_PATH='testProject/hello_world/app.py' xvfb-run npm run integrationTest
    
