version: 0.2

env:
  variables:
    CI: true

phases:
  install:
    runtime-versions:
      nodejs: 10
      dotnet: 2.2

    commands:
      - apt-get update
      - apt-get install -y python2.7 docker
      - apt-get install -y libgtk-3-dev libxss1 xvfb libnss3-dev libasound2 libasound2-plugins
      - pip install --user aws-sam-cli
      - pip install --upgrade awscli
  
  pre_build:
    commands:
      # make sure that SAM is in the path, is not automatically done on codebuild
      - USER_BASE_PATH=$(python -m site --user-base) && export PATH=$PATH:$USER_BASE_PATH/bin
      # start docker
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      # unzip the vs code extensions
      - unzip ${CODEBUILD_SRC_DIR_source2}/VSCodeIntegrationTestPlugins.zip
      - cp ${CODEBUILD_SRC_DIR_source2}/* .

  build:
    commands:
      - ls -al
      - npm install
      - env SAM_PROJECT_SDK='nodejs10.x' SAM_PROJECT_PATH='testProject/hello-world/app.js' xvfb-run npm run integrationTest
      - VSCODE=$(ls -1 ./.vscode-test/vscode*/VSCode*/bin/code)
      # install the python plugin (required for python testing) that we pulled from S3
      - $VSCODE --install-extension ms-python-release.vsix --user-data-dir /tmp/
      - env SAM_PROJECT_SDK='python2.7' SAM_PROJECT_PATH='testProject/hello_world/app.py' xvfb-run npm run integrationTest
      #- env SAM_PROJECT_SDK='python3.6' SAM_PROJECT_PATH='testProject/hello_world/app.py' xvfb-run npm run integrationTest
      #- env SAM_PROJECT_SDK='python3.7' SAM_PROJECT_PATH='testProject/hello_world/app.py' xvfb-run npm run integrationTest
      #- env SAM_PROJECT_SDK='dotnetcore2.1' SAM_PROJECT_PATH='testProject/src/HelloWorld/Function.cs' xvfb-run npm run integrationTest
    
