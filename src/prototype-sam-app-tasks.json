{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "mytask",
            "type": "shell",
            "command": "sam",
            "args": [
                "", // hack point - do this first to run a command that sets up the things for the other gets. return ''
                "local",
                "invoke",
                "${input:getSamResourceName}",
                // "HelloWorldFunction", // Replace this with the resource name of your lambda function from your Serverless Application template.yaml file
                "--template",
                "${input:getSamTemplate}",
                // "${workspaceFolder}/template.yaml", // Replace this with the appropriate workspace-relative path to your Serverless Application template.yaml file
                "--event",
                // "${workspaceFolder}/event.json", // Replace this with the appropriate workspace-relative path to your event.json file
                "${input:getDebugLambdaPayloadFile}",
                "-d",
                "5858",
                // "${input:getPort}"
            ],
            "isBackground": true,
            "problemMatcher": {
                "pattern": [
                    {
                        // Use regex that never matches anything.
                        "regexp": "^(x)(\\b)(x)$",
                        "file": 1,
                        "location": 2,
                        "message": 3
                    }
                ],
                "background": {
                    // This is how the debugger knows when it can attach
                    "activeOnStart": true,
                    "beginsPattern": "^Fetching lambci.* Docker container image......$",
                    "endsPattern": "^.* Mounting .* as .*:ro inside runtime container$"
                }
            }
        }
    ],
    "inputs": [
        {
            "id": "getSamResourceName",
            "type": "command",
            "command": "aws.prototype.retrieve.debug.setting",
            "args": {
                "get": "resourceName",
            },
        },
        {
            "id": "getSamTemplate",
            "type": "command",
            "command": "aws.prototype.retrieve.debug.setting",
            "args": {
                "get": "samTemplate",
            },
        },
        {
            "id": "getDebugLambdaPayloadFile",
            "type": "command",
            "command": "aws.prototype.retrieve.debug.setting",
            "args": {
                "get": "eventFile",
            },
        }
    ]
}